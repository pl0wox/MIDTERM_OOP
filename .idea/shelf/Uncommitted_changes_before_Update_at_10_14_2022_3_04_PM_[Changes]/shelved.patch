Index: src/Student.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\n\r\npublic class Student extends Person {\r\n    private int numOfModules, numOfRepeatModules;\r\n    private double amount_paid;\r\n    final int  ModulePrice = 525;\r\n    final int  RepeatedModulePrice = 110;\r\n\r\n    public static List<Student> studentList = new ArrayList<>();\r\n\r\n\r\n    //  Constructor Student\r\n    public Student(int ID, String Fname, String Lname, String Gender, String PhoneNum, String Address, int numOfModules, int numOfRepeatModules, double amount_paid) {\r\n        super(ID, Fname,Lname, Gender, PhoneNum , Address);\r\n        this.numOfModules = numOfModules;\r\n        this.numOfRepeatModules = numOfRepeatModules;\r\n        this.amount_paid = amount_paid;\r\n    }\r\n\r\n\r\n\r\n    public int getNumOfModules() {\r\n        return numOfModules;\r\n    }\r\n    public void setNumOfModules(int numOfModules) {\r\n        this.numOfModules = numOfModules;\r\n    }\r\n    public int getRep_modules() {\r\n        return numOfRepeatModules;\r\n    }\r\n    public void setRep_modules(int numOfRepeatModules) {\r\n        this.numOfRepeatModules = numOfRepeatModules;\r\n    }\r\n    public double getAmount_paid() {\r\n        return amount_paid;\r\n    }\r\n    public void setAmount_paid(double amount_paid) {\r\n        this.amount_paid = amount_paid;\r\n    }\r\n\r\n\r\n\r\n    static void add_student(){\r\n        System.out.println(\"====================================================\");\r\n        System.out.println(\"\\t\\t\\t\\t<< ADD NEW STUDENT >>\");\r\n        System.out.println(\"====================================================\\n\");\r\n\r\n\r\n        Scanner in = new Scanner(System.in).useDelimiter(\"\\n\");\r\n        final int  ModulePrice = 525;\r\n        final int  RepeatedModulePrice = 110;\r\n\r\n        System.out.print(\"Enter ID: \");\r\n        int addID = in.nextInt();\r\n\r\n        // Validation for Student ID\r\n        for(Student print : studentList){\r\n            if(addID == print.getID()){\r\n                System.out.println(\"ID already registered! \\nReturning to Student Menu...\");\r\n                Main.sysPause();\r\n                return;\r\n            }\r\n        }\r\n\r\n        System.out.print(\"Enter First Name: \");\r\n        String addFirstname = in.next();\r\n\r\n        System.out.print(\"Enter Last Name: \");\r\n        String addLastname = in.next();\r\n\r\n        System.out.print(\"Enter Gender: \");\r\n        String addGender = in.next();\r\n\r\n        System.out.print(\"Enter Phone Number: \");\r\n        String addPhone = in.next();\r\n\r\n        System.out.print(\"Enter Address: \");\r\n        String addAddress = in.next();\r\n\r\n        System.out.print(\"Enter Number of Modules: \");\r\n        int addModules = in.nextInt();\r\n\r\n        System.out.print(\"Enter Number of Repeated Modules: \");\r\n        int addRepModules = in.nextInt();\r\n\r\n        // Constraint the user to only input less than or equal than 6 modules\r\n        if((addModules + addRepModules) > 6){\r\n            System.out.println(\"You cannot get more than 6 modules for this semester!\");\r\n            return;\r\n        }\r\n        else if (addRepModules > 2){\r\n            System.out.println(\"You cannot take a new module if you want to take more than 2 repeated modules this semester!\");\r\n            return;\r\n        }\r\n\r\n\r\n        double addAmount = (ModulePrice * addModules) + (RepeatedModulePrice * addRepModules);\r\n        System.out.print(\"Account Status \");\r\n\r\n        // Inform user that1 student has been added\r\n        System.out.println(\"\\nSuccessfully Added Student #\" + addID + \" to the Database!\");\r\n\r\n        // store all inputs of user inside the constructor\r\n        Student studentobj = new Student(addID,addFirstname,addLastname,addGender,addPhone,addAddress,addModules,addRepModules,addAmount);\r\n\r\n        // store inside the array list\r\n        studentList.add(studentobj);\r\n\r\n        /*\r\n        for(Student print : ){\r\n            System.out.println(studentList.get(print));\r\n        }\r\n\r\n         */\r\n\r\n    }\r\n    static void update_student(){\r\n        System.out.println(\"====================================================\");\r\n        System.out.println(\"\\t\\t\\t\\t<< UPDATE STUDENT >>\");\r\n        System.out.println(\"====================================================\\n\");\r\n\r\n\r\n        Scanner in = new Scanner(System.in).useDelimiter(\"\\n\");\r\n\r\n        System.out.print(\"Enter ID: \");\r\n        int upID = in.nextInt();\r\n\r\n\r\n\r\n        for(int i = 0; i < studentList.size(); i++){\r\n            if(upID == studentList.get(i).getID()){\r\n\r\n\r\n\r\n\r\n                System.out.println(\"Student#\" + upID);\r\n                System.out.println(\"\\nName: \" + studentList.get(i).getFName() + \" \" + studentList.get(i).getLName());\r\n                System.out.println(\"Gender: \" + studentList.get(i).getGender());\r\n                System.out.println(\"Phone Number: \" + studentList.get(i).getPhoneNum());\r\n                System.out.println(\"Address: \" + studentList.get(i).getAddress());\r\n                System.out.println(\"Number of Modules: \" + studentList.get(i).getNumOfModules());\r\n                System.out.println(\"Number of Repeated Modules: \" + studentList.get(i).getRep_modules());\r\n\r\n                System.out.println(\"====================================================\");\r\n                System.out.println(\"\\t\\t\\t\\t<< UPDATE  >>\");\r\n                System.out.println(\"====================================================\\n\");\r\n\r\n                System.out.println(\"[1] Student Number\");\r\n                System.out.println(\"[2] Name\");\r\n                System.out.println(\"[3] Gender\");\r\n                System.out.println(\"[4] Phone Number\");\r\n                System.out.println(\"[5] Address \");\r\n                System.out.println(\"[6] Number of Modules\");\r\n                System.out.println(\"[7] Number of Repeated Modules\");\r\n\r\n\r\n\r\n\r\n                switch(Main.choice()){\r\n                    case 1:\r\n                        System.out.println(\"====================================================\");\r\n                        System.out.println(\"\\t\\t\\t\\t<< UPDATE STUDENT NUMBER  >>\");\r\n                        System.out.println(\"====================================================\\n\");\r\n\r\n                        System.out.print(\"Enter new Student Number (ex.202110139): \");\r\n                        int updateID = in.nextInt();\r\n\r\n                        for(int k = 0; k < studentList.size(); k++){\r\n                            if (updateID == studentList.get(k).getID()){\r\n                                System.out.println(updateID +\" is already registered! please try again\");\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    case 2:\r\n                        System.out.println(\"====================================================\");\r\n                        System.out.println(\"\\t\\t\\t\\t<< UPDATE STUDENT NAME  >>\");\r\n                        System.out.println(\"====================================================\\n\");\r\n\r\n                        System.out.println(\"Enter Student Name \");\r\n\r\n                        System.out.print(\"Enter First name: \");\r\n                        String updateFName = in.next();\r\n                        System.out.println(\"Enter Last name\");\r\n                        String updateLName = in.next();\r\n\r\n                        studentList.get(i).setFName(updateFName);\r\n                        studentList.get(i).setLName(updateLName);\r\n                        System.out.println(\"\\nStudent name has been updated!\");\r\n                        break;\r\n                    case 3:\r\n                        System.out.println(\"====================================================\");\r\n                        System.out.println(\"\\t\\t\\t\\t<< UPDATE STUDENT GENDER  >>\");\r\n                        System.out.println(\"====================================================\\n\");\r\n\r\n                        System.out.print(\"\");\r\n                        break;\r\n                    case 4:\r\n                        System.out.println(\"====================================================\");\r\n                        System.out.println(\"\\t\\t\\t\\t<< UPDATE PHONE NUMBER  >>\");\r\n                        System.out.println(\"====================================================\\n\");\r\n\r\n                        System.out.print(\"Enter your new Phone Number: \");\r\n                        String newPhone = in.next();\r\n\r\n                        // setter (setPhoneNum) used to update the current phone number\r\n                        studentList.get(i).setPhoneNum(newPhone);\r\n                        System.out.println(\"\\nPhone Number has been updated!\");\r\n                        break;\r\n                    case 5:\r\n                        System.out.println(\"====================================================\");\r\n                        System.out.println(\"\\t\\t\\t\\t<< UPDATE ADDRESS  >>\");\r\n                        System.out.println(\"====================================================\\n\");\r\n\r\n                        System.out.print(\"Enter your new Address: \");\r\n                        String newAddress = in.next();\r\n\r\n                        studentList.get(i).setAddress(newAddress);\r\n                        System.out.println(\"\\nAddress has been updated!\");\r\n                        break;\r\n                    case 6:\r\n                        System.out.println(\"====================================================\");\r\n                        System.out.println(\"\\t\\t\\t\\t<< UPDATE MODULES  >>\");\r\n                        System.out.println(\"====================================================\\n\");\r\n\r\n                        System.out.print(\"Update Number Modules: \");\r\n                        int newModules = in.nextInt();\r\n\r\n\r\n                        // check if user still takes 6 module\r\n                        if(newModules + studentList.get(i).getNumOfModules() > 6){\r\n                            System.out.println(\"Cannot take more than 6 total modules\");\r\n                        }\r\n                        else {\r\n                            studentList.get(i).setNumOfModules(newModules);\r\n                            System.out.println(\"\\nModules Have been updated!\");\r\n                        }\r\n                        break;\r\n\r\n                    case 7:\r\n                        System.out.println(\"====================================================\");\r\n                        System.out.println(\"\\t\\t\\t\\t<< UPDATE REPEATED MODULES  >>\");\r\n                        System.out.println(\"====================================================\\n\");\r\n\r\n                        System.out.println(\"Update Repeated Modules: \");\r\n                        int newRepeatedModules = in.nextInt();\r\n\r\n                        studentList.get(i).setRep_modules(newRepeatedModules);\r\n                        System.out.println(\"\\n Repeated Modules have been Updated\");\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n    static void delete_student(){\r\n        System.out.println(\"====================================================\");\r\n        System.out.println(\"\\t\\t\\t\\t<< DELETE STUDENT >>\");\r\n        System.out.println(\"====================================================\\n\");\r\n\r\n        if(studentList.size() == 0){\r\n            System.out.println(\"There are no Students registered in the database!\");\r\n            return;\r\n        }\r\n        else {\r\n            Scanner in = new Scanner(System.in);\r\n            System.out.print(\"Enter Student ID (ex. 202110139): \");\r\n            int delID = in.nextInt();\r\n\r\n\r\n\r\n            for (int i = 0; i < studentList.size(); i++) {\r\n                if (studentList.get(i).getID() == delID) {\r\n                    System.out.println(studentList.get(i).getID() + \" Has been removed from the database!!\");\r\n                    studentList.remove(i);\r\n\r\n                    if (studentList.lastIndexOf(i) == delID) {\r\n                        System.out.println(studentList.get(i).getID() + \" Has been removed from the database!!\");\r\n                        studentList.remove(i);\r\n                    }\r\n                    //else if (studentList.)\r\n                }\r\n            }\r\n                /*\r\n                // if last index is equal to user's ID\r\n                else if (studentList.lastIndexOf(i) == delID) {\r\n                    System.out.println(studentList.get(i).getID() + \" Has been removed from the database!!\");\r\n                    studentList.remove(i);\r\n                }\r\n\r\n                 */\r\n        }\r\n\r\n                /*\r\n                for(int j = 0; i < studentList.size(); j++){\r\n                     if (studentList.get(i).getID() != delID){\r\n                        System.out.println(\"Student #\" + delID + \" Has not been found from the database!!\");\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                 */\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Student.java b/src/Student.java
--- a/src/Student.java	(revision 7032dc40de31bc7eede6e559307ba8cbe69285d5)
+++ b/src/Student.java	(date 1665721294374)
@@ -267,7 +267,7 @@
         System.out.println("====================================================\n");
 
         if(studentList.size() == 0){
-            System.out.println("There are no Students registered in the database!");
+            System.out.println("There are no STUDENTS registered in the database!");
             return;
         }
         else {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d166c190-3c91-4f9a-a627-376b32e91083\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Student.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Student.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\r\n      <list>\r\n        <option value=\"jetoro &lt;76423923+pl0wox@users.noreply.github.com&gt;\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2FmgnovgsacHRm5Xfdfe3I1xhgQ\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;inlay.hints&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"Midterm\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d166c190-3c91-4f9a-a627-376b32e91083\" name=\"Changes\" comment=\"\" />\r\n      <created>1665102845902</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1665102845902</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"test\">\r\n      <created>1665104374487</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665104374487</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"test\">\r\n      <created>1665106389416</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665106389416</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"test\">\r\n      <created>1665436974311</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665436974311</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"test\">\r\n      <created>1665466476996</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665466476996</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"test\">\r\n      <created>1665466995520</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665466995520</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"test\">\r\n      <created>1665467067982</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665467067982</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"test\">\r\n      <created>1665470705669</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665470705669</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"test\">\r\n      <created>1665475544009</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665475544009</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Transfered student methods from Main.java to Student.java\">\r\n      <created>1665477227182</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665477227182</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Transfered student methods from Main.java to Student.java\">\r\n      <created>1665576462726</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1665576462726</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"11\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"test\" />\r\n    <MESSAGE value=\"Transfered student methods from Main.java to Student.java\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Transfered student methods from Main.java to Student.java\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.util.ConcurrentModificationException\" package=\"java.util\" />\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 7032dc40de31bc7eede6e559307ba8cbe69285d5)
+++ b/.idea/workspace.xml	(date 1665722874398)
@@ -3,7 +3,6 @@
   <component name="ChangeListManager">
     <list default="true" id="d166c190-3c91-4f9a-a627-376b32e91083" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Student.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Student.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -135,11 +134,11 @@
       <updated>1665477227182</updated>
     </task>
     <task id="LOCAL-00010" summary="Transfered student methods from Main.java to Student.java">
-      <created>1665576462726</created>
+      <created>1665716541947</created>
       <option name="number" value="00010" />
       <option name="presentableId" value="LOCAL-00010" />
       <option name="project" value="LOCAL" />
-      <updated>1665576462726</updated>
+      <updated>1665716541947</updated>
     </task>
     <option name="localTasksCounter" value="11" />
     <servers />
